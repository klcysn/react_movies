[{"C:\\Users\\user\\clarusway\\react_movies\\src\\index.js":"1","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\App.js":"2","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\SearchBar.js":"3","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\MovieList.js":"4","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\MovieCard.js":"5","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\Detail.js":"6","C:\\Users\\user\\clarusway\\react_movies\\src\\RouterApp.js":"7","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\Navbar.js":"8","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\Form.js":"9","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\Comments.js":"10"},{"size":212,"mtime":1610528233928,"results":"11","hashOfConfig":"12"},{"size":1646,"mtime":1610485796042,"results":"13","hashOfConfig":"12"},{"size":587,"mtime":1610627962268,"results":"14","hashOfConfig":"12"},{"size":715,"mtime":1610321755884,"results":"15","hashOfConfig":"12"},{"size":1456,"mtime":1610715445385,"results":"16","hashOfConfig":"12"},{"size":3739,"mtime":1610542029072,"results":"17","hashOfConfig":"12"},{"size":719,"mtime":1610706920524,"results":"18","hashOfConfig":"12"},{"size":445,"mtime":1610706943316,"results":"19","hashOfConfig":"12"},{"size":2399,"mtime":1610706822582,"results":"20","hashOfConfig":"12"},{"size":1137,"mtime":1610704692589,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1ssbvnm",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"24"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"24"},"C:\\Users\\user\\clarusway\\react_movies\\src\\index.js",[],["47","48"],"C:\\Users\\user\\clarusway\\react_movies\\src\\components\\App.js",["49"],"import {useEffect, useState} from \"react\"\r\nimport SearchBar from \"./SearchBar\"\r\nimport MovieList from \"./MovieList\"\r\nimport axios from \"axios\"\r\n\r\nconst App = () =>{\r\n    const [movieList, setMovieList] = useState()\r\n    const [searchText, setSearchText] = useState()\r\n    const {REACT_APP_API_TMDB_KEY} = process.env\r\n    const fetchMovie = async () =>{\r\n      const {data:{results}} = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${REACT_APP_API_TMDB_KEY}&language=en-US&page=1`)\r\n      setMovieList(results)\r\n    }\r\n\r\n    useEffect(()=>{\r\n      if (searchText){\r\n        handleSearch(searchText)\r\n      } else{\r\n        fetchMovie()\r\n      }\r\n    }, [searchText])\r\n\r\n    const handleSearch = async (text) =>{\r\n      const {data:{results}} = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${REACT_APP_API_TMDB_KEY}&query=${text}`)\r\n      console.log(results)\r\n      setMovieList(results)\r\n    }\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <SearchBar handleSearch = {(text) => setSearchText(text.target.value)} />\r\n                </div>\r\n            </div>\r\n            {\r\n              !movieList\r\n              ?\r\n              <div className=\"d-flex justify-content-center\">\r\n                <div className=\"spinner-border text-info m-5\" role=\"status\">\r\n                  <span className=\"visually-hidden\"></span>\r\n                </div>\r\n              </div>\r\n              :\r\n              <MovieList movieList={movieList} />\r\n              }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default App;","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\SearchBar.js",[],"C:\\Users\\user\\clarusway\\react_movies\\src\\components\\MovieList.js",[],["50","51"],"C:\\Users\\user\\clarusway\\react_movies\\src\\components\\MovieCard.js",["52"],"C:\\Users\\user\\clarusway\\react_movies\\src\\components\\Detail.js",["53"],"import axios from \"axios\"\r\nimport { useEffect, useState } from \"react\"\r\nimport {useParams, useHistory} from \"react-router-dom\"\r\n\r\nconst Detail = () => {\r\nconst history = useHistory()\r\nconst {id} = useParams()\r\nconst [detail, setDetail] = useState()\r\nconst [similar, setSimilar] = useState()\r\nconst fetchDetail = async () =>{\r\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_API_TMDB_KEY}&language=en-US`)\r\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/similar?api_key=${process.env.REACT_APP_API_TMDB_KEY}&language=en-US&page=1`)\r\n    setSimilar(response.data.results)\r\n    setDetail(data)\r\n}\r\nuseEffect(()=>{fetchDetail()}, [id])\r\n\r\nconst getList = () =>{\r\n    history.push(\"/\")\r\n}\r\n\r\nconst SimilarMovies = () =>{\r\n    return(\r\n        similar.map((item)=>{\r\n            return(\r\n            <div className=\"col-2 mb-2\" onClick={()=>history.push(`/detail/${item.id}`)} style={{cursor:\"pointer\"}}>\r\n                <div className=\"card h-100\">\r\n                    <img src={item?.poster_path ? `https://image.tmdb.org/t/p/w500${item?.poster_path}` : \"/logo512.png\"} className=\"card-img-top\" alt=\"...\"/>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{item.title}</h5>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            )\r\n        })\r\n    )\r\n}\r\n    return(\r\n           \r\n            detail\r\n            ?\r\n            <div className=\"card mb-3\">\r\n                <div className=\"row justify-content-between\">\r\n                    <div className=\"col-4\">\r\n                        <img className=\"w-100 h-100\" src={detail?.poster_path ? `https://image.tmdb.org/t/p/w500${detail?.poster_path}` : \"/logo512.png\"} alt=\"...\"/>\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\">{detail?.title}</h5>\r\n                            <a href={detail?.homepage} className=\"link-secondary\">Visit Official website</a>\r\n                            <p className=\"card-text\"><strong>Company:</strong> {detail?.production_companies[0]?.name}</p>\r\n                            <p className=\"card-text\"><strong>Country:</strong> {detail?.production_countries[0]?.name}</p>\r\n                            <p className=\"card-text\"><strong>Language:</strong> {detail?.spoken_languages[0]?.name}</p>\r\n                            <p className=\"card-text\"><strong>Date:</strong> {detail?.release_date}</p>\r\n                            <p className=\"card-text\"><strong>Rating:</strong> <span className=\"badge bg-info fs-3\">{detail?.vote_average}</span></p>\r\n                            <p className=\"card-text\"><strong>{detail?.tagline}</strong></p>\r\n                            <p className=\"card-text\">{detail?.overview}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 mt-4 mb-4\">\r\n                    <button className=\"btn btn-primary col-12 m-0\" type=\"button\" onClick={getList}>Go Back to Movie List</button>\r\n                </div>\r\n                {similar.length ? <h5 className=\"card-title text-center\">Similar Movies</h5> : null}\r\n                <div class=\"row cols-3 row-cols-md-6 g-4\">\r\n                    <SimilarMovies />\r\n                </div>\r\n            </div>\r\n            :\r\n            <div className=\"d-flex justify-content-center\">\r\n                <div className=\"spinner-border text-info m-5\" role=\"status\">\r\n                    <span className=\"visually-hidden\"></span>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Detail;","C:\\Users\\user\\clarusway\\react_movies\\src\\RouterApp.js",[],"C:\\Users\\user\\clarusway\\react_movies\\src\\components\\Navbar.js",[],"C:\\Users\\user\\clarusway\\react_movies\\src\\components\\Form.js",[],"C:\\Users\\user\\clarusway\\react_movies\\src\\components\\Comments.js",["54"],"import axios from \"axios\"\r\nimport { useEffect, useState } from \"react\";\r\nimport moment from \"moment\"\r\n\r\nconst colors = [\"#0D6BF5\", \"#697179\", \"#188351\", \"#D53343\", \"#212529\"]\r\nconst Comments = () =>{\r\n    const [comments, setComments] = useState([])\r\n    useEffect(async ()=>{\r\n        const {data} = await axios.get(\"http://localhost:3002/comments\")\r\n        setComments(data.sort((a, b)=>b.date-a.date))\r\n    },[])\r\n    return(\r\n        comments?.map((comment)=>{\r\n            return(\r\n                <div className=\"card text-white mb-3\" style={{maxWidth: 600, margin:30, backgroundColor:colors[Math.floor(Math.random()*5)]}}>\r\n                <div className=\"card-header\">{comment?.email}</div>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{comment?.name}</h5>\r\n                        <p className=\"card-text\">{comment?.message}</p>\r\n                    </div>\r\n                    <div class=\"card-footer bg-transparent border-success\">{moment(comment?.date).fromNow()}</div>\r\n                </div>\r\n            )\r\n        })\r\n        \r\n    )\r\n}\r\n\r\nexport default Comments;",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":21,"column":8,"nodeType":"61","endLine":21,"endColumn":20,"suggestions":"62"},{"ruleId":"55","replacedBy":"63"},{"ruleId":"57","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":2,"column":8,"nodeType":"67","messageId":"68","endLine":2,"endColumn":13},{"ruleId":"59","severity":1,"message":"69","line":16,"column":32,"nodeType":"61","endLine":16,"endColumn":36,"suggestions":"70"},{"ruleId":"59","severity":1,"message":"71","line":8,"column":15,"nodeType":"72","endLine":11,"endColumn":6},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchMovie' and 'handleSearch'. Either include them or remove the dependency array.","ArrayExpression",["75"],["73"],["74"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'fetchDetail'. Either include it or remove the dependency array.",["76"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","no-global-assign","no-unsafe-negation",{"desc":"77","fix":"78"},{"desc":"79","fix":"80"},"Update the dependencies array to be: [fetchMovie, handleSearch, searchText]",{"range":"81","text":"82"},"Update the dependencies array to be: [fetchDetail, id]",{"range":"83","text":"84"},[675,687],"[fetchMovie, handleSearch, searchText]",[719,723],"[fetchDetail, id]"]