[{"C:\\Users\\user\\clarusway\\react_movies\\src\\index.js":"1","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\App.js":"2","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\SearchBar.js":"3","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\MovieList.js":"4","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\MovieCard.js":"5","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\Detail.js":"6","C:\\Users\\user\\clarusway\\react_movies\\src\\RouterApp.js":"7","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\Navbar.js":"8","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\Form.js":"9","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\Comments.js":"10","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\EditComment.js":"11"},{"size":212,"mtime":1610528233928,"results":"12","hashOfConfig":"13"},{"size":2904,"mtime":1610729479985,"results":"14","hashOfConfig":"13"},{"size":587,"mtime":1610627962268,"results":"15","hashOfConfig":"13"},{"size":715,"mtime":1610321755884,"results":"16","hashOfConfig":"13"},{"size":1567,"mtime":1610730973531,"results":"17","hashOfConfig":"13"},{"size":3854,"mtime":1610731549753,"results":"18","hashOfConfig":"13"},{"size":927,"mtime":1610728937244,"results":"19","hashOfConfig":"13"},{"size":445,"mtime":1610706943316,"results":"20","hashOfConfig":"13"},{"size":2399,"mtime":1610730749571,"results":"21","hashOfConfig":"13"},{"size":1358,"mtime":1610730362640,"results":"22","hashOfConfig":"13"},{"size":2984,"mtime":1610722392724,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1ssbvnm",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},"C:\\Users\\user\\clarusway\\react_movies\\src\\index.js",[],["54","55"],"C:\\Users\\user\\clarusway\\react_movies\\src\\components\\App.js",["56"],"import {useEffect, useState} from \"react\"\r\nimport SearchBar from \"./SearchBar\"\r\nimport MovieList from \"./MovieList\"\r\nimport axios from \"axios\"\r\nimport {useHistory, useParams} from \"react-router-dom\"\r\n\r\nconst App = () =>{\r\n    const {current} = useParams()\r\n    const [movieList, setMovieList] = useState()\r\n    const [searchText, setSearchText] = useState()\r\n    const [page, setPage] = useState(parseInt(current) || 1)\r\n    const {REACT_APP_API_TMDB_KEY} = process.env\r\n    const history = useHistory()\r\n    const fetchMovie = async () =>{\r\n      const {data:{results}} = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${REACT_APP_API_TMDB_KEY}&language=en-US&page=${current}`)\r\n      setMovieList(results)\r\n    }\r\n\r\n    useEffect(()=>{\r\n      if (searchText){\r\n        handleSearch(searchText)\r\n      } else{\r\n        fetchMovie()\r\n      }\r\n    }, [searchText, page])\r\n\r\n    const handleSearch = async (text) =>{\r\n      const {data:{results}} = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${REACT_APP_API_TMDB_KEY}&query=${text}`)\r\n      setMovieList(results)\r\n    }\r\n\r\n    const next = () =>{\r\n      setPage(page + 1)\r\n      history.push(`/current/${page + 1}`)\r\n    }\r\n    const previous = () =>{\r\n      setPage(page - 1)\r\n      history.push(`/current/${page - 1}`)\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <SearchBar handleSearch = {(text) => setSearchText(text.target.value)} />\r\n                </div>\r\n            </div>\r\n            {\r\n              !movieList\r\n              ?\r\n              <div className=\"d-flex justify-content-center\">\r\n                <div className=\"spinner-border text-info m-5\" role=\"status\">\r\n                  <span className=\"visually-hidden\"></span>\r\n                </div>\r\n              </div>\r\n              :\r\n              <MovieList movieList={movieList} />\r\n              }\r\n              <nav>\r\n                <ul className=\"pagination justify-content-center\">\r\n                  <li className=\"page-item\">\r\n                    <button className=\"page-link\" tabindex=\"-1\" disabled={page === 1 ? true : false} onClick={previous}>Previous</button>\r\n                  </li>\r\n                  {page !== 1 ? <li className=\"page-item\"><button className=\"page-link\" onClick={previous}>{page - 1}</button></li> : null}\r\n                  <li className=\"page-item active\" aria-current=\"page\"><button className=\"page-link\">{page}</button></li>\r\n                  <li className=\"page-item\"><button className=\"page-link\" onClick={next}>{page + 1}</button></li>\r\n                  <li className=\"page-item\">\r\n                    <button className=\"page-link\" onClick={next}>Next</button>\r\n                  </li>\r\n                </ul>\r\n              </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default App;","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\SearchBar.js",[],["57","58"],"C:\\Users\\user\\clarusway\\react_movies\\src\\components\\MovieList.js",[],["59","60"],"C:\\Users\\user\\clarusway\\react_movies\\src\\components\\MovieCard.js",["61"],"import {useState} from \"react\"\r\nimport axios from \"axios\"\r\nimport {useHistory, useParams} from \"react-router-dom\"\r\n\r\nconst MovieCard = ({movie}) =>{\r\n    const history = useHistory()\r\n    const {current} = useParams()\r\n    const [show, setShow] = useState(true)\r\n    const setVisible = () => setShow(s => !s)\r\n    const getDetail = () =>{\r\n        history.push(`/detail/${current ? current : 1}/${movie.id}`)\r\n    }\r\n    return(\r\n                <>\r\n                    { show &&\r\n                        <div className=\"card mb-4 shadow-sm col-lg-3 col-md-4 ml-1\" style={{cursor:\"pointer\"}}>\r\n                        <img className=\"card-img-top\" onClick={getDetail} src={movie.poster_path ? `https://image.tmdb.org/t/p/w500${movie.poster_path}` : \"/logo512.png\"} alt=\"\" />\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title\" onClick={getDetail}>{movie?.title}</h5>\r\n                            <p className=\"card-text overflow-hidden\" onClick={getDetail}> {movie?.overview.slice(0, 150)}...</p>\r\n                            <div className=\"d-flex justify-content-between align-items-center\">\r\n                                <button type=\"button\" className=\"btn btn-md btn-outline-danger\" onClick={setVisible}>Hide</button>\r\n                                <h2><span className=\"badge badge-info\">{movie?.vote_average}</span></h2>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                </>\r\n    )\r\n}\r\n\r\nexport default MovieCard;","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\Detail.js",["62"],"import axios from \"axios\"\r\nimport { useEffect, useState } from \"react\"\r\nimport {useParams, useHistory} from \"react-router-dom\"\r\n\r\nconst Detail = () => {\r\nconst history = useHistory()\r\nconst {id, current} = useParams()\r\nconst [detail, setDetail] = useState()\r\nconst [similar, setSimilar] = useState()\r\nconst fetchDetail = async () =>{\r\n    const {data} = await axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${process.env.REACT_APP_API_TMDB_KEY}&language=en-US`)\r\n    const response = await axios.get(`https://api.themoviedb.org/3/movie/${id}/similar?api_key=${process.env.REACT_APP_API_TMDB_KEY}&language=en-US&page=1`)\r\n    setSimilar(response.data.results)\r\n    setDetail(data)\r\n}\r\nuseEffect(()=>{fetchDetail()}, [id])\r\n\r\nconst getList = () =>{\r\n    history.push(`/current/${current}`)\r\n}\r\n\r\nconst SimilarMovies = () =>{\r\n    return(\r\n        similar.map((item)=>{\r\n            return(\r\n            <div className=\"col-2 mb-2\" onClick={()=>history.push(`/detail/${current ? current : 1}/${item.id}`)} style={{cursor:\"pointer\"}}>\r\n                <div className=\"card h-100\">\r\n                    <img src={item?.poster_path ? `https://image.tmdb.org/t/p/w500${item?.poster_path}` : \"/logo512.png\"} className=\"card-img-top\" alt=\"...\"/>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{item.title}</h5>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            )\r\n        })\r\n    )\r\n}\r\n    return(\r\n           \r\n            detail\r\n            ?\r\n            <div className=\"card mb-3 w-100 overflow-hidden\">\r\n                <div className=\"row justify-content-between\">\r\n                    <div className=\"col-4\">\r\n                        <img className=\"w-100 h-100\" src={detail?.poster_path ? `https://image.tmdb.org/t/p/w500${detail?.poster_path}` : \"/logo512.png\"} alt=\"...\"/>\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                        <div className=\"card-body\">\r\n                            <h5 className=\"card-title mb-4\">{detail?.title}</h5>\r\n                            <a href={detail?.homepage} className=\"link-secondary\">Visit Official website</a>\r\n                            <p className=\"card-text mb-4 mt-4\"><strong>Company:</strong> {detail?.production_companies[0]?.name}</p>\r\n                            <p className=\"card-text mb-4\"><strong>Country:</strong> {detail?.production_countries[0]?.name}</p>\r\n                            <p className=\"card-text mb-4\"><strong>Language:</strong> {detail?.spoken_languages[0]?.name}</p>\r\n                            <p className=\"card-text mb-4\"><strong>Date:</strong> {detail?.release_date}</p>\r\n                            <p className=\"card-text mb-4\"><strong>Rating:</strong> <span className=\"badge bg-info fs-3\">{detail?.vote_average}</span></p>\r\n                            <p className=\"card-text\"><strong>{detail?.tagline}</strong></p>\r\n                            <p className=\"card-text\">{detail?.overview}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div class=\"col-12 mt-4 mb-4\">\r\n                    <button className=\"btn btn-primary col-12 m-0\" type=\"button\" onClick={getList}>Go Back to Movie List</button>\r\n                </div>\r\n                {similar.length ? <h5 className=\"card-title text-center\">Similar Movies</h5> : null}\r\n                <div class=\"row cols-3 row-cols-md-6 g-4 w-100\">\r\n                    <SimilarMovies />\r\n                </div>\r\n            </div>\r\n            :\r\n            <div className=\"d-flex justify-content-center\">\r\n                <div className=\"spinner-border text-info m-5\" role=\"status\">\r\n                    <span className=\"visually-hidden\"></span>\r\n                </div>\r\n            </div>\r\n    )\r\n}\r\n\r\nexport default Detail;","C:\\Users\\user\\clarusway\\react_movies\\src\\RouterApp.js",[],"C:\\Users\\user\\clarusway\\react_movies\\src\\components\\Navbar.js",[],"C:\\Users\\user\\clarusway\\react_movies\\src\\components\\Form.js",[],"C:\\Users\\user\\clarusway\\react_movies\\src\\components\\Comments.js",["63"],"import axios from \"axios\"\r\nimport { useEffect, useState } from \"react\";\r\nimport moment from \"moment\"\r\nimport {useHistory} from \"react-router-dom\"\r\n\r\nconst colors = [\"#0D6BF5\", \"#697179\", \"#188351\", \"#D53343\", \"#212529\"]\r\nconst Comments = () =>{\r\n    const history = useHistory()\r\n    const [comments, setComments] = useState([])\r\n    useEffect(async ()=>{\r\n        const {data} = await axios.get(\"http://localhost:3002/comments\")\r\n        setComments(data.sort((a, b)=>b.date-a.date))\r\n    },[])\r\n    return(\r\n        comments?.map((comment)=>{\r\n            return(\r\n                <div className=\"card text-white mb-3 pb-0\"  style={{maxWidth: 600, margin:30, backgroundColor:colors[Math.floor(Math.random()*5)]}}>\r\n                <div className=\"card-header\">{comment?.email}</div>\r\n                    <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">{comment?.name}</h5>\r\n                        <p className=\"card-text\">{comment?.message}</p>\r\n                    </div>\r\n                    <div class=\"card-footer bg-transparent border-success\">{moment(comment?.date).fromNow()}</div>\r\n                    <button type=\"button\" onClick={()=>history.push(`/edit/${comment.id}`)} class=\"btn btn-light mb-0\">Update</button>\r\n                </div>\r\n            )\r\n        })\r\n        \r\n    )\r\n}\r\n\r\nexport default Comments;","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\EditComment.js",["64","65","66"],"import serialize from \"form-serialize\"\r\nimport axios from \"axios\"\r\nimport {useHistory, Link, useParams} from \"react-router-dom\"\r\nimport { useState, useEffect } from \"react\"\r\n\r\n\r\nconst EditComment = () =>{\r\n    const history = useHistory()\r\n    const [updatedMessage, setUpdatedMessage] = useState({})\r\n    const {id} = useParams()\r\n\r\n    const handleFormSubmit = async (e) =>{\r\n        e.preventDefault()\r\n        await axios.put(`http://localhost:3002/comments/${id}`, {...updatedMessage, date: Date.now()})\r\n        history.push(\"/comments\")\r\n    }\r\n\r\n    useEffect(async ()=>{\r\n        const {data: {name, surname, email, message}} = await axios.get(`http://localhost:3002/comments/${id}`)\r\n        setUpdatedMessage({name, surname, email, message})\r\n    },[id])\r\n\r\n    const change = (e, area) =>{\r\n        if(area === \"name\"){\r\n            setUpdatedMessage({...updatedMessage, name: e.target.value})\r\n        }else if(area === \"surname\"){\r\n            setUpdatedMessage({...updatedMessage, surname: e.target.value})\r\n        }else if(area === \"email\"){\r\n            setUpdatedMessage({...updatedMessage, email: e.target.value})\r\n        }else if(area === \"message\"){\r\n            setUpdatedMessage({...updatedMessage, message: e.target.value})\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <form className=\"container w-50 mt-5\" onSubmit={handleFormSubmit}>\r\n                <div className=\"mb-3\">\r\n                    <label for=\"name\" className=\"form-label\" >Your Name</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={(e)=>change(e, \"name\")} value={updatedMessage.name} name=\"name\"\r\n                    placeholder=\"Write your name\"/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label for=\"surname\" className=\"form-label\" >Your Surname</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={(e)=>change(e, \"surname\")} value={updatedMessage.surname}\r\n                    name=\"surname\" placeholder=\"Write your surname\"/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label for=\"email\" className=\"form-label\" >Email address</label>\r\n                    <input type=\"email\" className=\"form-control\" onChange={(e)=>change(e, \"email\")} value={updatedMessage.email}\r\n                    name=\"email\" placeholder=\"name@example.com\"/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label for=\"message\" className=\"form-label\" >Message</label>\r\n                    <textarea className=\"form-control\" onChange={(e)=>change(e, \"message\")} value={updatedMessage.message}\r\n                    name=\"message\" rows=\"3\"></textarea>\r\n                </div>\r\n                <div className=\"d-grid gap-2 w-100\">\r\n                    <button className=\"btn btn-primary w-100\" type=\"submit\">Send</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditComment;",{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":25,"column":8,"nodeType":"73","endLine":25,"endColumn":26,"suggestions":"74"},{"ruleId":"67","replacedBy":"75"},{"ruleId":"69","replacedBy":"76"},{"ruleId":"67","replacedBy":"77"},{"ruleId":"69","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":2,"column":8,"nodeType":"81","messageId":"82","endLine":2,"endColumn":13},{"ruleId":"71","severity":1,"message":"83","line":16,"column":32,"nodeType":"73","endLine":16,"endColumn":36,"suggestions":"84"},{"ruleId":"71","severity":1,"message":"85","line":10,"column":15,"nodeType":"86","endLine":13,"endColumn":6},{"ruleId":"79","severity":1,"message":"87","line":1,"column":8,"nodeType":"81","messageId":"82","endLine":1,"endColumn":17},{"ruleId":"79","severity":1,"message":"88","line":3,"column":21,"nodeType":"81","messageId":"82","endLine":3,"endColumn":25},{"ruleId":"71","severity":1,"message":"85","line":18,"column":15,"nodeType":"86","endLine":21,"endColumn":6},"no-native-reassign",["89"],"no-negated-in-lhs",["90"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchMovie' and 'handleSearch'. Either include them or remove the dependency array.","ArrayExpression",["91"],["89"],["90"],["89"],["90"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'fetchDetail'. Either include it or remove the dependency array.",["92"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'serialize' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},{"desc":"95","fix":"96"},"Update the dependencies array to be: [searchText, page, handleSearch, fetchMovie]",{"range":"97","text":"98"},"Update the dependencies array to be: [fetchDetail, id]",{"range":"99","text":"100"},[871,889],"[searchText, page, handleSearch, fetchMovie]",[728,732],"[fetchDetail, id]"]