[{"C:\\Users\\user\\clarusway\\react_movies\\src\\index.js":"1","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\App.js":"2","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\SearchBar.js":"3","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\MovieList.js":"4","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\MovieCard.js":"5","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\Detail.js":"6","C:\\Users\\user\\clarusway\\react_movies\\src\\RouterApp.js":"7","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\Navbar.js":"8","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\Form.js":"9","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\Comments.js":"10","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\EditComment.js":"11"},{"size":212,"mtime":1610528233928,"results":"12","hashOfConfig":"13"},{"size":2904,"mtime":1610729479985,"results":"14","hashOfConfig":"13"},{"size":587,"mtime":1610627962268,"results":"15","hashOfConfig":"13"},{"size":715,"mtime":1610321755884,"results":"16","hashOfConfig":"13"},{"size":1567,"mtime":1610730973531,"results":"17","hashOfConfig":"13"},{"size":3854,"mtime":1610731549753,"results":"18","hashOfConfig":"13"},{"size":927,"mtime":1610728937244,"results":"19","hashOfConfig":"13"},{"size":445,"mtime":1610706943316,"results":"20","hashOfConfig":"13"},{"size":2399,"mtime":1610730749571,"results":"21","hashOfConfig":"13"},{"size":1358,"mtime":1610730362640,"results":"22","hashOfConfig":"13"},{"size":2984,"mtime":1610722392724,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1ssbvnm",{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"26"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},"C:\\Users\\user\\clarusway\\react_movies\\src\\index.js",[],["51","52"],"C:\\Users\\user\\clarusway\\react_movies\\src\\components\\App.js",["53"],"import {useEffect, useState} from \"react\"\r\nimport SearchBar from \"./SearchBar\"\r\nimport MovieList from \"./MovieList\"\r\nimport axios from \"axios\"\r\nimport {useHistory, useParams} from \"react-router-dom\"\r\n\r\nconst App = () =>{\r\n    const {current} = useParams()\r\n    const [movieList, setMovieList] = useState()\r\n    const [searchText, setSearchText] = useState()\r\n    const [page, setPage] = useState(parseInt(current) || 1)\r\n    const {REACT_APP_API_TMDB_KEY} = process.env\r\n    const history = useHistory()\r\n    const fetchMovie = async () =>{\r\n      const {data:{results}} = await axios.get(`https://api.themoviedb.org/3/movie/popular?api_key=${REACT_APP_API_TMDB_KEY}&language=en-US&page=${current}`)\r\n      setMovieList(results)\r\n    }\r\n\r\n    useEffect(()=>{\r\n      if (searchText){\r\n        handleSearch(searchText)\r\n      } else{\r\n        fetchMovie()\r\n      }\r\n    }, [searchText, page])\r\n\r\n    const handleSearch = async (text) =>{\r\n      const {data:{results}} = await axios.get(`https://api.themoviedb.org/3/search/movie?api_key=${REACT_APP_API_TMDB_KEY}&query=${text}`)\r\n      setMovieList(results)\r\n    }\r\n\r\n    const next = () =>{\r\n      setPage(page + 1)\r\n      history.push(`/current/${page + 1}`)\r\n    }\r\n    const previous = () =>{\r\n      setPage(page - 1)\r\n      history.push(`/current/${page - 1}`)\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                    <SearchBar handleSearch = {(text) => setSearchText(text.target.value)} />\r\n                </div>\r\n            </div>\r\n            {\r\n              !movieList\r\n              ?\r\n              <div className=\"d-flex justify-content-center\">\r\n                <div className=\"spinner-border text-info m-5\" role=\"status\">\r\n                  <span className=\"visually-hidden\"></span>\r\n                </div>\r\n              </div>\r\n              :\r\n              <MovieList movieList={movieList} />\r\n              }\r\n              <nav>\r\n                <ul className=\"pagination justify-content-center\">\r\n                  <li className=\"page-item\">\r\n                    <button className=\"page-link\" tabindex=\"-1\" disabled={page === 1 ? true : false} onClick={previous}>Previous</button>\r\n                  </li>\r\n                  {page !== 1 ? <li className=\"page-item\"><button className=\"page-link\" onClick={previous}>{page - 1}</button></li> : null}\r\n                  <li className=\"page-item active\" aria-current=\"page\"><button className=\"page-link\">{page}</button></li>\r\n                  <li className=\"page-item\"><button className=\"page-link\" onClick={next}>{page + 1}</button></li>\r\n                  <li className=\"page-item\">\r\n                    <button className=\"page-link\" onClick={next}>Next</button>\r\n                  </li>\r\n                </ul>\r\n              </nav>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default App;","C:\\Users\\user\\clarusway\\react_movies\\src\\components\\SearchBar.js",[],["54","55"],"C:\\Users\\user\\clarusway\\react_movies\\src\\components\\MovieList.js",[],["56","57"],"C:\\Users\\user\\clarusway\\react_movies\\src\\components\\MovieCard.js",["58"],"C:\\Users\\user\\clarusway\\react_movies\\src\\components\\Detail.js",["59"],"C:\\Users\\user\\clarusway\\react_movies\\src\\RouterApp.js",[],"C:\\Users\\user\\clarusway\\react_movies\\src\\components\\Navbar.js",[],"C:\\Users\\user\\clarusway\\react_movies\\src\\components\\Form.js",[],"C:\\Users\\user\\clarusway\\react_movies\\src\\components\\Comments.js",["60"],"C:\\Users\\user\\clarusway\\react_movies\\src\\components\\EditComment.js",["61","62","63"],"import serialize from \"form-serialize\"\r\nimport axios from \"axios\"\r\nimport {useHistory, Link, useParams} from \"react-router-dom\"\r\nimport { useState, useEffect } from \"react\"\r\n\r\n\r\nconst EditComment = () =>{\r\n    const history = useHistory()\r\n    const [updatedMessage, setUpdatedMessage] = useState({})\r\n    const {id} = useParams()\r\n\r\n    const handleFormSubmit = async (e) =>{\r\n        e.preventDefault()\r\n        await axios.put(`http://localhost:3002/comments/${id}`, {...updatedMessage, date: Date.now()})\r\n        history.push(\"/comments\")\r\n    }\r\n\r\n    useEffect(async ()=>{\r\n        const {data: {name, surname, email, message}} = await axios.get(`http://localhost:3002/comments/${id}`)\r\n        setUpdatedMessage({name, surname, email, message})\r\n    },[id])\r\n\r\n    const change = (e, area) =>{\r\n        if(area === \"name\"){\r\n            setUpdatedMessage({...updatedMessage, name: e.target.value})\r\n        }else if(area === \"surname\"){\r\n            setUpdatedMessage({...updatedMessage, surname: e.target.value})\r\n        }else if(area === \"email\"){\r\n            setUpdatedMessage({...updatedMessage, email: e.target.value})\r\n        }else if(area === \"message\"){\r\n            setUpdatedMessage({...updatedMessage, message: e.target.value})\r\n        }\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <form className=\"container w-50 mt-5\" onSubmit={handleFormSubmit}>\r\n                <div className=\"mb-3\">\r\n                    <label for=\"name\" className=\"form-label\" >Your Name</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={(e)=>change(e, \"name\")} value={updatedMessage.name} name=\"name\"\r\n                    placeholder=\"Write your name\"/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label for=\"surname\" className=\"form-label\" >Your Surname</label>\r\n                    <input type=\"text\" className=\"form-control\" onChange={(e)=>change(e, \"surname\")} value={updatedMessage.surname}\r\n                    name=\"surname\" placeholder=\"Write your surname\"/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label for=\"email\" className=\"form-label\" >Email address</label>\r\n                    <input type=\"email\" className=\"form-control\" onChange={(e)=>change(e, \"email\")} value={updatedMessage.email}\r\n                    name=\"email\" placeholder=\"name@example.com\"/>\r\n                </div>\r\n                <div className=\"mb-3\">\r\n                    <label for=\"message\" className=\"form-label\" >Message</label>\r\n                    <textarea className=\"form-control\" onChange={(e)=>change(e, \"message\")} value={updatedMessage.message}\r\n                    name=\"message\" rows=\"3\"></textarea>\r\n                </div>\r\n                <div className=\"d-grid gap-2 w-100\">\r\n                    <button className=\"btn btn-primary w-100\" type=\"submit\">Send</button>\r\n                </div>\r\n            </form>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default EditComment;",{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":25,"column":8,"nodeType":"70","endLine":25,"endColumn":26,"suggestions":"71"},{"ruleId":"64","replacedBy":"72"},{"ruleId":"66","replacedBy":"73"},{"ruleId":"64","replacedBy":"74"},{"ruleId":"66","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":13},{"ruleId":"68","severity":1,"message":"80","line":16,"column":32,"nodeType":"70","endLine":16,"endColumn":36,"suggestions":"81"},{"ruleId":"68","severity":1,"message":"82","line":10,"column":15,"nodeType":"83","endLine":13,"endColumn":6},{"ruleId":"76","severity":1,"message":"84","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":17},{"ruleId":"76","severity":1,"message":"85","line":3,"column":21,"nodeType":"78","messageId":"79","endLine":3,"endColumn":25},{"ruleId":"68","severity":1,"message":"82","line":18,"column":15,"nodeType":"83","endLine":21,"endColumn":6},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchMovie' and 'handleSearch'. Either include them or remove the dependency array.","ArrayExpression",["88"],["86"],["87"],["86"],["87"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","React Hook useEffect has a missing dependency: 'fetchDetail'. Either include it or remove the dependency array.",["89"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","'serialize' is defined but never used.","'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"desc":"92","fix":"93"},"Update the dependencies array to be: [searchText, page, handleSearch, fetchMovie]",{"range":"94","text":"95"},"Update the dependencies array to be: [fetchDetail, id]",{"range":"96","text":"97"},[871,889],"[searchText, page, handleSearch, fetchMovie]",[728,732],"[fetchDetail, id]"]